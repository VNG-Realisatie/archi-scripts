/**
 * setObjectID
 *
 * Set and check all objects for having a valid property Object ID
 * For the GEMMA ArchiMate-model a valid GUID is:
 * - unique, no duplicates
 * - conforms to a valid GUID patterns, also GUIDs from the SWC are valid
 *
 * The property Object ID is used as a tool-independent ID when distributing and
 * exchanging models in the Open Exchange file format.
 *
 * Version 1:
 * - Check all objects for empty property "Object ID"
 * - if empty set to id
 * Version 2: 26-05-2020
 * - if Object ID is not a valid GUID, try to set it with a GUID derived from the id
 * 		- if id is a valid GUID => set Object ID to id
 *  	- if id is a known Archi id => set Object ID to stripped Archi id
 *  	- if id doesn't contain a valid GUID => set Object ID to a generated GUID
 * Version 3: 26-10-2020
 * - the scripts is merged with the ObjectID_check script
 * - SWC guid patterns as valid GUIDs added
 * Version 3.1: 21-2-2021
 * - also check de model-object
 * Version 3.2: 14-3-2024
 * - generateUUID() moved to _lib/common.js
 * Version 3.3: 19-3-2024
 * - add property Release=<today> to model object
 * Version 4.0: 22-5-2024
 * - refactored with ChatGPT
 * - create include_GEMMA.js for reuse setObjectID functions
 * - set release property moved to createReleaseModel.ajs
 *
 * (c) 2019 Mark Backer
 */
load("../_lib/Common.js");
load("include_GEMMA.js");

initConsoleLog(__FILE__, true);

try {
  // Gather all objects excluding folders
  let objects = gatherObjects();

  // Set IDs for objects without ID or with invalid ID
  setObjectID(objects);
} catch (error) {
  console.log(`> ${typeof error.stack == "undefined" ? error : error.stack}`);
}

finishConsoleLog();
