/**
 * Create GEMMA bedrijfsobjectenmodel gebaseerd op GGM
 *
 * Uitgangssituatie
 * - GGM ArchiMate-model met een geïmporteerd GGM model
 *   - data-objecten en iv3-domeinen met script ggm-sync.ajs (ggm_export_objects_<date>.csv)
 *   - data-object relaties met import_relations.ajs (convert GGM relations.ods met bewerkt ggm_export_relations_<date>.csv)
 * - GGM import bestaat uit
 *   - data-objecten en onderlinge relaties met ggm-guid
 *   - Iv3 domeinen en aggregatie-relaties zonder ggm-guid
 *
 * Aanmaken GEMMA bedrijfsobjectenmodel
 * - GGM data-objecten en relaties worden gekopieerd als GEMMA bedrijfsobjectenmodel (met identieke ggm-guid)
 * - Iv3 domeinen worden niet gekopieerd
 *   - ggm relaties groeperen de GGM data-objecten
 *   - gekopieerde ggm relaties groeperen de GEMMA bedrijfsobjecten
 *
 * ID's GGM
 * - GGM objecten en relaties hebben een uniek id ggm-guid
 * - iv3 domeinen en relaties met deze domeinen echter niet
 * ID's GEMMA
 * - GGM ID's worden gekopieerd
 * - iv3 domeinen en relaties krijgen een gemma-id (voor matchen aggregatie-relaties DO én BO met iv3-domeinen)
 * - alle objecten en relaties krijgen een gemma Object ID
 *
 */

load("include-ggm-gemma.js");
const FOLDER_NAME = "Bedrijfsobjecten";

initConsoleLog(__FILE__, true);

const REALIZATION_LABEL = "realiseert bedrijfsobject";

let businessObjectFolder = getFolder("Business", FOLDER_NAME);
let relationsBusinessObjectFolder = getFolder("Relations", FOLDER_NAME);
let relationsIv3Folder = getFolder("Relations", "Domein iv3");

let selectedObjects = getSelection($(selection), "data-object");
let businessObjectsColl = $();
let dataObjectColl = $();
let relationColl = $();

// updateBusinessObjects(selectedObjects, businessObjectFolder, relationFolder, dataObjectColl, businessObjectsColl);
// appendSuffix(businessObjectsColl);
// updateRelationsBusinessObject(dataObjectColl, relationsBusinessObjectFolder, relationColl);

updateRelationsIv3(selectedObjects, relationsIv3Folder, relationColl);

console.log(`> from ${selectedObjects.size()} data-objects`);
console.log(`> ${businessObjectsColl.size()} business-objects  and`);
console.log(`> ${relationColl.size()} relations between business-objects created`);

finishConsoleLog();
