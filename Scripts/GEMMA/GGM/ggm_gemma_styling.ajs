/**
 * Opmaken van GGM data- en bedrijfsobjectenviews
 */
load(__DIR__ + "../../_lib/Common.js");
load(__DIR__ + "../../_lib/selection.js");

initConsoleLog(__FILE__, true);

try {
  // kleur voor onderscheid op archimate-type (data- en bedrijfsobject)
  applyToCollection(getVisualSelection($(selection), "data-object"), styleDataObjects);

  // bold font domein-grouping
  console.log();
  applyToCollection(getVisualSelection($(selection), "grouping"), styleGroupings);

  // specialisatie-relaties groen
  console.log();
  applyToCollection(getVisualSelection($(selection), "specialization-relationship"), styleSpecialization);

  let views = getSelection($(selection), "view");

  // toon domein voor data- of bedrijfsobjecten die niet in een domeingroup zijn genest
  console.log();
  let notNestedElements = views.children("element").not("grouping");
  applyToCollection(notNestedElements, setLabelExpression);

  // publiceren bedrijfsobjecten views
  console.log();
  views
    .each((view) => {
      view.prop("Bron", "GGM");
      view.prop("Scope", "Gemeente");
      view.prop("Detailniveau", "Samenhang");
      // view.prop("Domein", gemmaDomein);
      view.prop("Viewtype", "Basis");

      if (view.name.endsWith(" (GGM)")) {
        view.prop("Architectuurlaag", "Applicatiearchitectuur");
      } else {
        // Bedrijfsobjectmodellen publiceren
        view.prop("Publiceren", "GEMMA Online en redactie");
        view.prop("Architectuurlaag", "Bedrijfsarchitectuur");
      }
      view.removeProp("generate_view_param")
    });

  // set view property domein for wiki queries
  views.each((view) => {
    $(view)
      .children("grouping")
      .filter((group) => group.prop("domein-iv3"))
      .each((grouping) => {
        view.prop("domein-iv3", grouping.prop("domein-iv3"));
      });
  });
} catch (error) {
  console.log(`> ${typeof error.stack == "undefined" ? error : error.stack}`);
}

finishConsoleLog();

/**
 * Styling functions
 */
function styleDataObjects(obj) {
  switch (obj.prop("archimate-type")) {
    case "Data object":
      obj.opacity = 255;
      obj.gradient = GRADIENT.NONE;
      obj.fillColor = null;
      break;
    case "Business object":
      obj.opacity = 200;
      obj.gradient = GRADIENT.LEFT;
      obj.fillColor = "#FFFFCC"; // "Cream"
      break;

    default:
      obj.opacity = 255;
      obj.gradient = GRADIENT.NONE;
      obj.fillColor = "#C0C0C0"; // "Silver"
      break;
  }
  if (obj.prop("uml-type") == "Enumeration") {
    obj.opacity = 100;
    obj.labelExpression = "${name}\n(${property:uml-type})";
  }
}

function styleGroupings(obj) {
  obj.fontSize = 12;
  obj.fontStyle = "bold";
  obj.textAlignment = TEXT_ALIGNMENT.LEFT;
  obj.fillColor = "#FAFAFA"
}

function styleSpecialization(obj) {
  obj.lineColor = "#5dade2"; // Sets line color to blue
  obj.lineWidth = 2;
}

/**
 * Append (<domein_iv3>) to the label of an visual object
 */
function setLabelExpression(obj) {
  obj.labelExpression = "${name}\n($aggregation:source{name})";
}
