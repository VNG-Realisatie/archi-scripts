/**
 * Create GEMMA bedrijfsobjectenmodel gebaseerd op GGM
 *
 * Uitgangssituatie
 * - GGM ArchiMate-model met een geïmporteerd GGM model
 *   - data-objecten en iv3-domeinen met script ggm-sync.ajs (ggm_export_objects_<date>.csv)
 *   - data-object relaties met import_relations.ajs (convert GGM relations.ods met bewerkt ggm_export_relations_<date>.csv)
 * - GGM import bestaat uit
 *   - data-objecten en onderlinge relaties met ggm-guid
 *   - Iv3 domeinen en aggregatie-relaties zonder ggm-guid
 *
 * Aanmaken GEMMA bedrijfsobjectenmodel
 * - GGM data-objecten en relaties worden gekopieerd als GEMMA bedrijfsobjectenmodel (met identieke ggm-guid)
 * - Iv3 domeinen worden niet gekopieerd
 *   - ggm relaties groeperen de GGM data-objecten
 *   - gekopieerde ggm relaties groeperen de GEMMA bedrijfsobjecten
 *
 * ID's GGM
 * - GGM objecten en relaties hebben een uniek id ggm-guid (aangeleverd in GGM csv)
 * - iv3 domeinen en aggregaties hebben géén GGM id (aangemaakt met Sync ggm.ajs)
 * GEMMA ID's
 * - alle objecten krijgen een Object ID
 * gebruik ID's voor matchen
 * - gekopieerde bedrijfsobjecten en relaties (van data-objecten en relaties) krijgen
 *    - kopie ggm-guid van bron object
 *    - uniek Object ID
 * - iv3 domeinen en aggregaties krijgen 
 *    - uniek Object ID (voor matchen aggregatie-relaties DO én BO met iv3-domeinen)
 *    - kopie Object ID in afgeleide aggregatie relaties domein -> bedrijfsobject
 */

load("include-ggm-gemma.js");

const FOLDER_NAME = "Bedrijfsobjecten";
const REALIZATION_LABEL = "realiseert bedrijfsobject";

let stats_BO = {nr_update: 0, nr_create: 0 }
let stats_relBO = {nr_update: 0, nr_create: 0 }
let stats_relIv3 = {nr_update: 0, nr_create: 0 }

initConsoleLog(__FILE__, true);

let selectedObjects = getSelection($(selection), "data-object");
updateBusinessObjects(
  selectedObjects,
  getFolder("Business", FOLDER_NAME),
  getFolder("Relations", "realiseert bedrijfsobject"), stats_BO
);
updateRelationsBusinessObject(selectedObjects, getFolder("Relations", FOLDER_NAME), stats_relBO);
updateRelationsIv3(selectedObjects, getFolder("Relations", "Domein iv3"), stats_relIv3);

console.log(`> from ${selectedObjects.size()} data-objects`);
console.log(`> business-objects: ${stats_BO.nr_create} created, ${stats_BO.nr_update} updated`);
console.log(`> business-object relations: ${stats_relBO.nr_create} created, ${stats_relBO.nr_update} updated`);
console.log(`> Iv3 relations: ${stats_relIv3.nr_create} created, ${stats_relIv3.nr_update} updated`);

finishConsoleLog();
