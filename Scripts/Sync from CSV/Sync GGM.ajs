/**
 * Import GGM objecten in GEMMA-GGM Archi-repository
 *
 * Specificatie CSV-bestanden
 *  - https://github.com/VNG-Realisatie/GEMMA-GGM-Archi-repository/tree/develop/CSV%20export
 *
 * Dit script leest de GGM objecten in als
 * - data-objecten
 * - grouping beleidsdomeinen (iv3-domein)
 *
 */

load(__DIR__ + "Include_LoadAndSync.js");

/**
 * file: GGM Enterprise Architect CSV export
 *    C:/Users/marks/Vereniging van Nederlandse Gemeenten/Unit Architectuur en Standaarden - Documents/GEMMA ontwikkelstraat/GGM
 */

// C:/D-schijf/Data/Dropbox/KING/KING ICT/Archi/Werkbestanden/GGM
let GGM_csv_dir = __DIR__ + "../../../../Werkbestanden/GGM/Rondje2.1/";
let GGM_objects = "ggm_export_objects_21022024-11_03_02.csv";
// let GGM_relations = "ggm_export_relations_06112023-07_59_13.csv";

var beleidsdomeinen = {
  label: "Beleidsdomeinen",
  csv: GGM_csv_dir + GGM_objects,
  targetType: "grouping",
  targetFolder: getFolder("Other", "Beleidsdomeinen"),
  getId: function (element) {
    // return element.prop("domein-iv3");
    return element.name;
  },
  setId: function (element, row) {
    // element.prop("domein-iv3", row["_id"]);
    element.name = row["_id"];
  },
  id: "domein-iv3", // per id wordt een object aangemaakt
  name: "domein-iv3",
  documentation: "geen", // ggm_sync zoekt naar kolom "geen" => documentation is leeg
  propMapping: {
    "GGM-datum-tijd-export": "datum-tijd-export",
    "GEMMA type": function () {
      return "Beleidsdomein";
    },
  },
  relations: {},
};

var dataobjecten = {
  label: "Dataobject",
  csv: GGM_csv_dir + GGM_objects,
  targetType: "data-object",
  // filter: function (row) {
  //   return row["archimate-type"] != "Business object";
  // },
  targetFolder: getFolder("Application", "Data-objecten (GGM)"),
  getId: function (element) {
    return element.prop("GGM-guid-imported");
  },
  setId: function (element, row) {
    element.prop("GGM-guid-imported", row["_id"]);
  },
  id: "GGM-guid",
  name: "GGM-naam",
  documentation: "GGM-definitie",
  propMapping: {
    "GGM-uml-type": "GGM-uml-type",
    // "GGM-archimate-type": "archimate-type", // niet inlezen. dit wordt door GEMMA beheerd
    "GGM-toelichting": "GGM-toelichting",
    "GGM-synoniemen": "GGM-synoniemen",
    "GGM-bron": "GGM-bron",
    "GGM-guid-imported": "GGM-guid",
    // "domein-iv3": "domein-iv3", // added as relation
    // "domein-dcat": "domein-dcat",
    // "domein-gemma": "domein-gemma",
    "Datum-tijd-export": "datum-tijd-export",
  },
  relations: {
    beleidsdomeinen_rel: {
      column: "domein-iv3",
      reference: beleidsdomeinen,
      targetType: "aggregation-relationship",
      targetFolder: getFolder("Relations", "Beleidsdomeinen (GGM)"),
      isReversed: true,
    },
  },
};

// End of configuration =========================================================================================

// Things start here ============================================================================================
// Load data from CSV Files and sync model elements
console.show();
console.clear();
console.log(
  "Start of synchronization. If script doesn't ends with an 'End of synchronization' message, then check Archi error log in 'Help > About Archi > Installation Details > Configuration > View Error Log'"
);
var startTime = new Date().getTime();

loadAndSync(beleidsdomeinen);

loadAndSync(dataobjecten);
syncModelRelationships(dataobjecten);

// Uncomment next line to enable tagging of concepts previously imported but no more present in current CSV files
// tagDeletedConcepts();

var endTime = new Date().getTime();
console.log("Elapse time: ", (endTime - startTime) / 1000, " sec");
console.log("End of synchronization. Check previous messages for errors and undo in case of doubt.");
