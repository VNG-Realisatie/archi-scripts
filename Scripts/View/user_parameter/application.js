/**
 * User defined parameter
 *
 * This definition is read by function get_user_parameter.
 * - the parameter name has to be USER_PARAM
 * - defined attributes are inserted (or overwrite) the previous param
 * 
 */
const USER_PARAM = {
  includeElementType: [
    "application-collaboration",
    "application-component",
    "application-event",
    "application-function",
    "application-interaction",
    "application-interface",
    "application-process",
    "application-service",
    // "artifact",
    // "assessment",
    // "business-actor",
    // "business-collaboration",
    // "business-event",
    // "business-function",
    // "business-interaction",
    // "business-interface",
    // "business-object",
    // "business-process",
    // "business-role",
    // "business-service",
    // "canvas-model-block",
    // "canvas-model-image",
    // "canvas-model-sticky",
    // "capability",
    // "communication-network",
    // "constraint",
    // "contract",
    // "course-of-action",
    // "data-object",
    // "deliverable",
    // "device",
    // "diagram-model-connection",
    // "diagram-model-group",
    // "diagram-model-image",
    // "diagram-model-note",
    // "diagram-model-reference",
    // "distribution-network",
    // "driver",
    // "equipment",
    // "facility",
    // "gap",
    // "goal",
    "grouping",
    // "implementation-even",
    // "junction",
    // "location",
    // "material",
    // "meaning",
    // "node",
    // "outcome",
    // "path",
    // "plateau",
    // "principle",
    // "product",
    // "representation",
    // "requirement",
    // "resource",
    // "sketch-model-actor",
    // "sketch-model-sticky",
    // "stakeholder",
    // "system-software",
    // "technology-collaboration",
    // "technology-event",
    // "technology-function",
    // "technology-interaction",
    // "technology-interface",
    // "technology-process",
    // "technology-service",
    // "value",
    // "work-package",
  ],
  includeRelationType: [
    "access-relationship",
    "aggregation-relationship",
    "assignment-relationship",
    "association-relationship",
    "composition-relationship",
    // "flow-relationship",
    "influence-relationship",
    "realization-relationship",
    "serving-relationship",
    "specialization-relationship",
    "triggering-relationship",
  ],
  layoutReversed: [
    // "access-relationship",
    // "aggregation-relationship",
    // "assignment-relationship",
    // "association-relationship",
    // "composition-relationship",
    // "flow-relationship",
    // "influence-relationship",
    "realization-relationship",
    "serving-relationship",
    "specialization-relationship",
    // "triggering-relationship",
  ],
  layoutNested: [
    // "access-relationship",
    // "aggregation-relationship",
    // "assignment-relationship",
    // "association-relationship",
    // "composition-relationship",
    // "flow-relationship",
    // "influence-relationship",
    // "realization-relationship",
    // "serving-relationship",
    // "specialization-relationship",
    // "triggering-relationship",
  ],
};