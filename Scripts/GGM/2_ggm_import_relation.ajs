/**
 * Import the ggm relations
 *  - read from spreadsheet, match with 
 *  - move to folder
 *  - set Object ID
 *
 * The GGM data-object must be synced with previous step 1_ggm_sync_from_csv
 */

load(__DIR__ + "../_lib/Common.js");
load("../_lib/archi_folders.js");
load("include_ggm_gemma.js");

// Overrule PROP_ID: vind bestaande relaties met PROP_GGM_ID_IMPORTED ipv Object ID
var PROP_ID = PROP_GGM_ID_IMPORTED;
load(__DIR__ + "../ImportExport_CSV/include_import.js");

initConsoleLog(__FILE__, true);

let dir = "C:/D-schijf/Data/Dropbox/KING/KING ICT/Archi/Werkbestanden/GGM/Rondje2.1/";
// let fileName = "convert GGM relations from ods.csv"
let fileName = "gemma_import_relations (convert ggm).csv";
importObjects(dir + fileName);

let dataobjectRelations = $(getFolderPath("/Relations"))
.children("relationship")
.filter((rel) => rel.prop(PROP_GGM_ID_IMPORTED) != undefined);
let folderDataobjectRelations = getFolderPath("/Relations" + FOLDER_GGM_DATAOBJECT);

console.log(`\n> move ${dataobjectRelations.size()} created relations to ${folderDataobjectRelations}`);

// move added data-objectrelations
dataobjectRelations.each((rel) => { 
  // debug(`rel: ${rel}`)
  folderDataobjectRelations.add(rel)});

// and set Object ID
console.log(`> and set a property 'Object ID'`);
dataobjectRelations.each((rel) => {
  if (!rel.prop("Object ID")) rel.prop("Object ID", generateUUID());
});

finishConsoleLog();
