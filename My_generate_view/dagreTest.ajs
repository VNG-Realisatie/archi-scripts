// Create the input graph
// var g = new dagreD3.graphlib.Graph({compound:true})
//   .setGraph({})
//   .setDefaultEdgeLabel(function() { return {}; });

ENGINE_NASHORN = "jdk.nashorn.api.scripting.NashornScriptEngine";
ENGINE_GRAAL_VM = "com.oracle.truffle.js.scriptengine.GraalJSScriptEngine";

try {
  if ($.process.engine === ENGINE_NASHORN || $.process.engine === ENGINE_GRAAL_VM) {
    load(__DIR__ + "../_lib/Common.js");

    initConsoleLog(__FILE__, false);

    load(__DIR__ + "../_lib/jvm-npm.js");
    NODE_MODULES_DIR = __SCRIPTS_DIR__ + "node_modules";
    require.addPath(NODE_MODULES_DIR);
    var dagre = require("./dagre-cluster-fix/dist/dagre");

    initConsoleLog(__FILE__);

    console.log("Loading dependencies...");
    dagreTest();

    finishConsoleLog();
  } else {
    console.log(`engine: ${$.process.engine}`);
    exit();
  }
} catch (error) {
  if (error.message == "$ is not defined") {
    var dagre = require("dagre-cluster-fix");
    dagreTest();
  } else {
    console.log(`> ${typeof error.stack == "undefined" ? error : error.stack}`);
  }
}

function dagreTest() {
  console.log(`Node modules used for creating graph:`);
  console.log(`- dagre:    ${dagre.version}`);
  console.log(`- graphlib: ${dagre.graphlib.version}\n`);

  var graph = new dagre.graphlib.Graph({
    compound: true,
    multigraph: true,
  });

  graphLayout = new Object();
  graphLayout.marginx = 10;
  graphLayout.marginy = 10;

  graph.setGraph(graphLayout);
  // Default to assigning a new object as a label for each new edge.
  graph.setDefaultEdgeLabel(function () {
    return {};
  });

  // Here we're setting the nodes
  graph.setNode("a", { label: "A" });
  graph.setNode("b", { label: "B" });
  graph.setNode("c", { label: "C" });
  graph.setNode("d", { label: "D" });
  graph.setNode("e", { label: "E" });
  graph.setNode("f", { label: "F" });
  graph.setNode("g", { label: "G" });
  graph.setNode("group", { label: "Group", clusterLabelPos: "top", style: "fill: #d3d7e8" });
  graph.setNode("top_group", { label: "Top Group", clusterLabelPos: "bottom", style: "fill: #ffd47f" });
  graph.setNode("bottom_group", { label: "Bottom Group", style: "fill: #5f9488" });

  // Set the parents to define which nodes belong to which cluster
  graph.setParent("top_group", "group");
  graph.setParent("bottom_group", "group");
  graph.setParent("b", "top_group");
  graph.setParent("c", "bottom_group");
  graph.setParent("d", "bottom_group");
  graph.setParent("e", "bottom_group");
  graph.setParent("f", "bottom_group");

  // Set up edges, no special attributes.
  graph.setEdge("a", "a", { label: "aa circular" });
  graph.setEdge("a", "b", { label: "ab" });
  graph.setEdge("b", "c", { label: "bc" });
  graph.setEdge("b", "d", { label: "bd" });
  graph.setEdge("b", "e", { label: "be" });
  graph.setEdge("b", "f", { label: "bf" });
  graph.setEdge("b", "g", { label: "bg" });

  var opts = {};
  opts.debugTiming = false;

  dagre.layout(graph, opts);
  console.log();

  graph.nodes().forEach(function (v) {
    console.log("Node " + v + ": " + JSON.stringify(graph.node(v), null, "  "));
  });
  graph.edges().forEach(function (e) {
    console.log("Edge " + e.v + " -> " + e.w + ": " + JSON.stringify(graph.edge(e), null, "  "));
  });
}
