/*
 * CopyFormat
 * Copy the formatting of the selected object and paste this to all objects of the same type
 * Use this script in conjuntion with the brush (format painter) in the Archi palette
 *
 * behavior
 * 	select one object in a view			-> copy formatting to all objects of same type
 *
 * (c) 2019 Mark Backer
 * 
 * 2022
 * - added appearance properties textAlignment, textPosition en gradient
 * - select all object types, not only elements
 */
const SCRIPT_NAME = __FILE__.replace(/^.*[\\\/]/, "");

console.show();
// console.clear();
console.log(`\nRunning script "${SCRIPT_NAME}"...`);

try {
  if ($(selection).size() != 1) {
    console.error(`> Select one object in a view`);
  } else {
    var selObj = $(selection).first();
    if (!$(selObj.view).is("view")) {
      console.error(`> Selected object is not on a view. Select one object in a view`);
    } else {
      let selType;
      if ($(selObj).is("concept")) selType = "concept";
      if ($(selObj).is("diagram-model-note")) selType = "diagram-model-note";
      if ($(selObj).is("diagram-model-group")) selType = "diagram-model-group";
      if ($(selObj).is("diagram-model-connection")) selType = "diagram-model-connection";

      console.log(`> Selected a ${selType == "concept" ? selObj.concept.type : selType} on view "${selObj.view.name}"`);

      var i = 0;
      $(selObj.view)
        .find(selType == "concept" ? selObj.concept.type : selType)
        .not($(selObj))
        .each(function (obj) {
          CopyFormat(selObj, obj);
          i++;
        });
      console.log(`> Formatting copied to ${i} objects`);
    }
  }
} catch (error) {
  console.error(`> ${typeof error.stack == "undefined" ? error : error.stack}`);
}
console.log(`Script "${SCRIPT_NAME}" finished\n`);

/**
 * CopyFormat
 * 	copy appearance properties of one object to another
 */
function CopyFormat(copyObj, pasteObj) {
  console.log(`- ${pasteObj.name ? pasteObj.name : pasteObj}`);

  pasteObj.fontColor = copyObj.fontColor;
  pasteObj.fontName = copyObj.fontName;
  pasteObj.fontSize = copyObj.fontSize;
  pasteObj.fontStyle = copyObj.fontStyle;
  pasteObj.lineColor = copyObj.lineColor;

  // for elements
  pasteObj.figureType = copyObj.figureType;
  pasteObj.fillColor = copyObj.fillColor;
  pasteObj.opacity = copyObj.opacity;
  pasteObj.outlineOpacity = copyObj.outlineOpacity;

  // jArchi 0.8
  pasteObj.textAlignment = copyObj.textAlignment;
  pasteObj.textPosition = copyObj.textPosition;
  // jArchi 1.2
  pasteObj.gradient = copyObj.gradient;

  // for Note and Group objects.
  pasteObj.borderType = copyObj.borderType;
  // for connection
  pasteObj.lineWidth = copyObj.lineWidth;
}
