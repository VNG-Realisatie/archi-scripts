/*
 * ObjectID_duplicate
 * 
 * Version 1: Check all objects for duplicate "Object ID"
 * 
 * (c) 2019 Mark Backer
 *
 */

// customlabel_ID_property for finding existing elements
var customlabel_ID_property = "Object ID";
var IndexMap = [];
var Duplicate = [];
var Duplicate_i = 0;

// Show output in the console
console.show();
console.clear();
console.log("Executing " + __FILE__.substring(6) + " ...\n");

function check_duplicatie_ID_property(concept){
	if (IndexMap[concept.prop(customlabel_ID_property)]) {
		Duplicate[Duplicate_i] = `"${concept}" with duplicate [${customlabel_ID_property}] = ${concept.prop(customlabel_ID_property)}`; 
		console.log(Duplicate[Duplicate_i]);
		Duplicate_i++;
	} else { 
		IndexMap[concept.prop(customlabel_ID_property)]=true;
	}
}

// Loop on all concepts
$('concept').each(function(concept) {
	check_duplicatie_ID_property(concept)
})

// Loop on all views
$('view').each(function(view) {
	check_duplicatie_ID_property(view)
})

if (Duplicate_i > 0) {
	console.log(`\nThere are ${Duplicate_i} object with duplicate [${customlabel_ID_property}] found`);
	console.log(`For new objects: easy sollution is to \n- find the object in the model tree`);
	console.log(`- show de properties tab and\n- remove the property [${customlabel_ID_property}] (right click on [${customlabel_ID_property}])`);
	console.log(`For existing objects: \n- be carefull from which object to remove the [${customlabel_ID_property}] !!`);
} else {
	console.log(`\nNo duplicates found :)`);
}
