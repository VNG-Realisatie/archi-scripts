/*
 * ObjectID_duplicate
 * 
 * Version 1: Check all objects for duplicate "Object ID"
 * 
 * (c) 2019 Mark Backer
 *
 */

// Show output in the console
console.show();
console.clear();
var filepath = __FILE__.split("/");
var scriptName = filepath[filepath.length - 1];
console.log(`Executing script "${scriptName}"...\n`);

// label_ID_property for finding existing elements
var label_ID_property = "Object ID";
var indexMap = [];
var i = 0;
var j = 0;

// check all concepts
$('concept').each(function (concept) {
	check_duplicatie_ID_property(concept)
})

// chack all views
$('view').each(function (view) {
	check_duplicatie_ID_property(view)
})

if (i > 0) {
	console.log(`\nThere ${(i==1 ? "is" : "are")} ${i} object with duplicate [${label_ID_property}] found\n`);
	console.log(`To generate a new ${label_ID_property}:`);
	console.log(`- lookup the object in the model tree`);
	console.log(`- remove the property [${label_ID_property}] (right click on [${label_ID_property}])`);
	console.log(`- and fill the property [${label_ID_property}] with script "ObjectID_empty.ajs"`);
} else {
	console.log(`\nNo duplicates found :)`);
}

if (j > 0) {
	console.log(`\nThere ${(j==1 ? "is" : "are")} ${j} object without or with an empty [${label_ID_property}]\n`);
	console.log(`To create valid ${label_ID_property} properties:`);
	console.log(`- run the script "ObjectID_empty.ajs"`);
}

console.log(`\nScript "${scriptName}" finished`);

/**
 * 
 * @param pObject match object with index. if found 
 */
function check_duplicatie_ID_property(pObject) {
	// check for duplicate
	if (indexMap[pObject.prop(label_ID_property)]) {
		if (pObject.prop(label_ID_property) == null) {
			j++
		} else {
			console.log(`"${pObject}" with duplicate [${label_ID_property}] = ${pObject.prop(label_ID_property)}`);
			i++;
		}
	} else { // add ID to indexMap
		indexMap[pObject.prop(label_ID_property)] = true;
	}
}